name: Test

on:
  push:
  # Triggers the workflow on labeled PRs only.
  pull_request_target:
    types: [ labeled ]

jobs:
  test:
    if: github.event_name == 'push' || (github.event_name == 'pull_request_target' && contains(github.event.pull_request.labels.*.name, 'safe to test'))
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
        java-version: [ "8", "11" ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      # Install required tools
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: ${{ matrix.java-version }}

      # Install Go for the Artifactory setup in the next step
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
          cache: false

      - name: Setup Artifactory
        env:
          RTLIC: ${{ secrets.RTLIC }}
          GOPROXY: direct
        run: |
          go install github.com/jfrog/jfrog-testing-infra/local-rt-setup@latest
          ~/go/bin/local-rt-setup

      # Run tests
      - name: Tests on macOS, Linux
        run: ./gradlew clean validatePlugins check
        if: runner.os != 'Windows'
      - name: Tests on Windows
        run: ./gradlew.bat clean check
        if: runner.os == 'Windows'

      # Stop Gradle daemon
      - name: Stop Gradle
        run: ./gradlew --stop
